import re

# 定义部分匹配的表情映射表
emoji_map_total  = {
    "捂脸": "🤦‍♂️",  # 捂脸
    "笑哭": "😂",  # 笑哭
    "爱心": "❤️",  # 爱心
    "鼓掌": "👏",  # 鼓掌
    "生气": "😡",  # 生气
    "惊讶": "😲",  # 惊讶
    "大哭": "😭",  # 大哭
    "OK": "👌",  # OK
    "好耶": "🙌",  # 好耶
    "赞": "👍",  # 赞
    "坏笑": "😏",  # 坏笑
    "无语": "😑",  # 无语
    "火": "🔥",  # 火
    "星星眼": "🤩",  # 星星眼
    "哭笑不得": "😆",  # 哭笑不得
    "打call": "🎤",  # 打call
    "怒": "😠",  # 怒
    "加油": "💪",  # 加油
    "心碎": "💔",  # 心碎
    "飞吻": "😘",  # 飞吻
    "月亮": "🌙",  # 月亮
    "太阳": "🌞",  # 太阳
    "星星": "✨",  # 星星
    "笑": "😁",  # 笑
    "亲亲": "😚",  # 亲亲
    "调皮": "😜",  # 调皮
    "大拇指": "👍",  # 大拇指
    "鲜花": "🌸",  # 鲜花
    "拜拜": "👋",  # 拜拜
    "哭": "😢",  # 哭
    "胜利": "✌️",  # 胜利
    "爱": "💘",  # 爱
    "太阳眼镜": "🕶️",  # 太阳眼镜
    "爆炸": "💥",  # 爆炸
    "笑脸": "😊",  # 笑脸
    "微笑": "🙂",  # 微笑
    "叹气": "😔",  # 叹气
    "胜利手势": "✌️",  # 胜利手势
    "眨眼": "😉",  # 眨眼
    "耶": "✌️",  # 耶
    "抱抱": "🤗",  # 抱抱
    "汗": "😓",  # 汗
    "思考": "🤔",  # 思考
    "滑稽": "😜",  # 滑稽
    "爱你": "💞",  # 爱你
    "哈欠": "🥱",  # 哈欠
    "睡觉": "😴",  # 睡觉
    "感动": "😢",  # 感动
    "吃瓜": "🍉",  # 吃瓜
    "吐舌头": "😛",  # 吐舌头
    "流口水": "🤤",  # 流口水
    "惊悚": "😱",  # 惊悚
    "手势OK": "👌",  # 手势OK
    "比心": "💖",  # 比心
    "佩服": "🙇",  # 佩服
    "心动": "😍",  # 心动
    "开心": "😄",  # 开心
    "晕": "😵",  # 晕
    "红包": "🧧",  # 红包
    "玫瑰": "🌹",  # 玫瑰
    "喜欢": "🥰",  # 喜欢
    "棒棒哒": "👍",  # 棒棒哒
    "嘿嘿": "😬",  # 嘿嘿
    "羡慕": "😌",  # 羡慕
    "惊呆": "😯",  # 惊呆
    "点赞": "👍",  # 点赞
    "吐槽": "🙄",  # 吐槽
    "开心到飞起": "🥳",  # 开心到飞起
    "庆祝": "🎉",  # 庆祝
    "酷": "😎",  # 酷
    "汗颜": "😅",  # 汗颜
    "平安": "🕊️",  # 平安
    "发财": "🤑",  # 发财
    "愤怒": "😤",  # 愤怒
    "发火": "🔥",  # 发火
    "困": "😪",  # 困
    "抠鼻": "👃",  # 抠鼻
    "幽灵": "👻",  # 幽灵
    "礼物": "🎁",  # 礼物
    "红包雨": "💸",  # 红包雨
}


# 正则匹配部分表情
def replace_partial_emojis(comment, emoji_map=None, default_emoji="😂"):
    if emoji_map is None:
        emoji_map = emoji_map_total
    matched = False  # 标记是否有匹配
    for key in emoji_map:
        # 使用正则进行部分匹配
        pattern = re.compile(rf"\[{key}.*?\]", re.IGNORECASE)
        if re.search(pattern, comment):
            matched = True
        comment = re.sub(pattern, lambda match: emoji_map[key], comment)

    # 如果没有匹配任何表情，则使用默认表情
    if not matched:
        comment = re.sub(r"\[.*?\]", default_emoji, comment)

    return comment